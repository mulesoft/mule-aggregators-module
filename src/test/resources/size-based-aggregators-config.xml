<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:aggregators="http://www.mulesoft.org/schema/mule/aggregators"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/aggregators http://www.mulesoft.org/schema/mule/aggregators/current/mule-aggregators.xsd
      http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <flow name="noIncrementalAggregationRoute">
        <aggregators:size-based-aggregator name="1"  maxSize="2">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:aggregation-complete>
                <flow-ref name="onComplete"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="onCompleteListener">
        <aggregators:aggregator-listener aggregatorName="1" includeTimedOutGroups="false"/>
        <flow-ref name="onListener"/>
    </flow>

    <flow name="incrementalAggregationRoute">
        <aggregators:size-based-aggregator name="2"  maxSize="2">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <flow-ref name="onIncremental"/>
            </aggregators:incremental-aggregation>
            <aggregators:aggregation-complete>
                <flow-ref name="onComplete"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="incrementalAggregationRouteCalledMultipleTimes">
        <aggregators:size-based-aggregator name="3"  maxSize="4">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <flow-ref name="onIncremental"/>
            </aggregators:incremental-aggregation>
            <aggregators:aggregation-complete>
                <flow-ref name="onComplete"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="timeoutAggregator1">
        <aggregators:size-based-aggregator name="4"  maxSize="2" timeout="500"
                                           timeoutUnit="MILLISECONDS">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:aggregation-complete>
                <flow-ref name="onComplete"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="onNotTimeoutListener">
        <aggregators:aggregator-listener aggregatorName="4" includeTimedOutGroups="false"/>
        <flow-ref name="onListener"/>
    </flow>

    <flow name="timeoutAggregator2">
        <aggregators:size-based-aggregator name="5"  maxSize="2" timeout="500"
                                           timeoutUnit="MILLISECONDS">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:aggregation-complete>
                <flow-ref name="onComplete"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="onTimeoutListener">
        <aggregators:aggregator-listener aggregatorName="5" includeTimedOutGroups="true"/>
        <flow-ref name="onListener"/>
    </flow>

    <flow name="attributesAreSet">
        <aggregators:size-based-aggregator name="6"  maxSize="2">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:aggregation-complete>
                <test:assert expression="#[attributes.isGroupComplete == true]"/>
                <test:assert expression="#[attributes.aggregationId != null]"/>
                <test:assert expression="#[attributes.firstItemArrivalTime != attributes.lastItemArrivalTime ]"/>
                <test:assert expression="#[attributes.firstItemArrivalTime != null]"/>
                <test:assert expression="#[attributes.lastItemArrivalTime != null]"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="propagateVariables">
        <aggregators:size-based-aggregator name="7"  maxSize="2">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <set-variable variableName="#[vars.variableKey]" value="#[vars.variableValue]"/>
            </aggregators:incremental-aggregation>
            <aggregators:aggregation-complete>
                <set-variable variableName="#[vars.variableKey]" value="#[vars.variableValue]"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="onIncrementalIdCheck">
        <aggregators:size-based-aggregator name="8"  maxSize="3">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <choice>
                    <when expression="#[vars.id != null]">
                        <test:assert expression="#[vars.id == attributes.aggregationId]"/>
                    </when>
                    <otherwise>
                        <set-variable variableName="id" value="#[attributes.aggregationId]"/>
                    </otherwise>
                </choice>
            </aggregators:incremental-aggregation>
            <aggregators:aggregation-complete>
                <test:processor/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="onCompleteAndListenerIdCheck">
        <aggregators:size-based-aggregator name="9"  maxSize="2">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <set-variable variableName="id" value="#[attributes.aggregationId]"/>
            </aggregators:incremental-aggregation>
            <aggregators:aggregation-complete>
                <test:assert expression="#[vars.id == attributes.aggregationId]"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="idCheckListener">
        <aggregators:aggregator-listener aggregatorName="9"/>
        <set-payload value="#[correlationId]"/>
        <flow-ref name="onListener"/>
    </flow>

    <flow name="idChangeAfterComplete">
        <aggregators:size-based-aggregator name="10"  maxSize="2">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <choice>
                    <when expression="#[vars.id != null]">
                        <test:assert expression="#[vars.id != attributes.aggregationId]"/>
                    </when>
                    <otherwise>
                        <set-variable variableName="id" value="#[attributes.aggregationId]"/>
                    </otherwise>
                </choice>
            </aggregators:incremental-aggregation>
            <aggregators:aggregation-complete>
                <test:processor/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="sortedItems">
        <aggregators:size-based-aggregator name="9" content="#[payload]" maxSize="3">
            <aggregators:aggregation-complete>
                <flow-ref name="onComplete"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="sortedMixedItems">
        <aggregators:size-based-aggregator name="9" content="#[payload]" maxSize="5">
            <aggregators:aggregation-complete>
                <flow-ref name="onComplete"/>
            </aggregators:aggregation-complete>
        </aggregators:size-based-aggregator>
    </flow>

    <flow name="onComplete">
        <set-variable variableName="executionRoute" value="aggregationComplete"/>
        <test:processor class="org.mule.functional.util.FlowExecutionLogger"/>
    </flow>

    <flow name="onIncremental">
        <set-variable variableName="executionRoute" value="incrementalAggregation"/>
        <test:processor class="org.mule.functional.util.FlowExecutionLogger"/>
    </flow>

    <flow name="onListener">
        <set-variable variableName="executionRoute" value="listenerCalled"/>
        <test:processor class="org.mule.functional.util.FlowExecutionLogger"/>
    </flow>


</mule>