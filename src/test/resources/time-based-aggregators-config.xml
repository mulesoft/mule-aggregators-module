<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:aggregators="http://www.mulesoft.org/schema/mule/aggregators"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
      http://www.mulesoft.org/schema/mule/aggregators http://www.mulesoft.org/schema/mule/aggregators/current/mule-aggregators.xsd
      http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <flow name="incrementalAggregationRoute">
        <aggregators:time-based-aggregator name="1"  period="1000" periodUnit="SECONDS" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <flow-ref name="onIncremental"/>
            </aggregators:incremental-aggregation>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="aggregatorWithSmallPeriod">
        <aggregators:time-based-aggregator name="2"  period="100" periodUnit="MILLISECONDS" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="aggregatorWithSmallPeriodListener">
        <aggregators:aggregator-listener aggregatorName="2" includeTimedOutGroups="false"/>
        <flow-ref name="onListener"/>
    </flow>


    <flow name="aggregatorWithMaxSize">
        <aggregators:time-based-aggregator name="3"  period="1000" maxSize="3" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="aggregatorWithMaxSizeListener">
        <aggregators:aggregator-listener aggregatorName="3" includeTimedOutGroups="false"/>
        <flow-ref name="onListener"/>
    </flow>


    <flow name="beforeAndAfterAggregator">
        <aggregators:time-based-aggregator name="4"  period="1000" maxSize="3" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="attributesAreSet">
        <aggregators:time-based-aggregator name="5"  period="10" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <test:assert expression="#[attributes.isGroupComplete == false]"/>
                <test:assert expression="#[attributes.aggregationId != null]"/>
                <choice>
                    <when expression="#[sizeOf(payload) == 1]">
                        <test:assert expression="#[attributes.firstItemArrivalTime == attributes.lastItemArrivalTime]"/>
                    </when>
                    <otherwise>
                        <test:assert expression="#[attributes.firstItemArrivalTime != attributes.lastItemArrivalTime]"/>
                    </otherwise>
                </choice>
                <test:assert expression="#[attributes.firstItemArrivalTime != null]"/>
                <test:assert expression="#[attributes.lastItemArrivalTime != null]"/>
            </aggregators:incremental-aggregation>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="propagateVariables">
        <aggregators:time-based-aggregator name="6"  period="1000" periodUnit="SECONDS" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <set-variable variableName="#[vars.variableKey]" value="#[vars.variableValue]"/>
            </aggregators:incremental-aggregation>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="idCheck">
        <aggregators:time-based-aggregator name="7"  period="1000" maxSize="3" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <choice>
                    <when expression="#[vars.id != null]">
                        <test:assert expression="#[vars.id == attributes.aggregationId]"/>
                    </when>
                    <otherwise>
                        <set-variable variableName="id" value="#[attributes.aggregationId]"/>
                    </otherwise>
                </choice>
            </aggregators:incremental-aggregation>
        </aggregators:time-based-aggregator>
    </flow>


    <flow name="idCheckListener">
        <aggregators:aggregator-listener aggregatorName="7" includeTimedOutGroups="false"/>
        <set-payload value="#[correlationId]"/>
        <flow-ref name="onListener"/>
    </flow>

    <flow name="idChangeAfterComplete">
        <aggregators:time-based-aggregator name="8" period="1000"  maxSize="2" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
            <aggregators:incremental-aggregation>
                <choice>
                    <when expression="#[vars.id != null]">
                        <test:assert expression="#[vars.id != attributes.aggregationId]"/>
                    </when>
                    <otherwise>
                        <set-variable variableName="id" value="#[attributes.aggregationId]"/>
                    </otherwise>
                </choice>
            </aggregators:incremental-aggregation>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="sortedItems">
        <aggregators:time-based-aggregator name="9" period="1000" maxSize="3" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="sortedItemsListener">
        <aggregators:aggregator-listener aggregatorName="9" includeTimedOutGroups="false"/>
        <flow-ref name="onComplete"/>
    </flow>

    <flow name="sortedMixedItems">
        <aggregators:time-based-aggregator name="10" period="1000" maxSize="5" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="sortedMixedItemsListener">
        <aggregators:aggregator-listener aggregatorName="10" includeTimedOutGroups="false"/>
        <flow-ref name="onComplete"/>
    </flow>

    <flow name="scheduledAggregationNotExecuted">
        <aggregators:time-based-aggregator name="11" maxSize="3" period="200" periodUnit="MILLISECONDS" objectStore="${objectStore}">
            <aggregators:content>
                #[payload]
            </aggregators:content>
        </aggregators:time-based-aggregator>
    </flow>

    <flow name="scheduledAggregationNotExecutedListener">
        <aggregators:aggregator-listener aggregatorName="11" includeTimedOutGroups="true"/>
        <flow-ref name="onComplete"/>
        <flow-ref name="onListener"/>
    </flow>

    <flow name="aggregateMessageWithBigPayloadOnPersistentOS">
        <file:read config-ref="globalFileConfig" path="big_payload"/>
        <aggregators:time-based-aggregator name="12" maxSize="3" period="2" periodUnit="SECONDS" objectStore="aggregatorsPersistentObjectStore">
            <aggregators:incremental-aggregation>
                <set-variable variableName="result" value="#[payload]"/>
            </aggregators:incremental-aggregation>
        </aggregators:time-based-aggregator>
    </flow>

</mule>